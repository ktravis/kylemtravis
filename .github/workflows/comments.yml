name: blog-post-create-issues
on:
  push:
    branches: [ master ]
jobs:
  create:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: collect-titles
      run: "grep -E '@name\\s*\\=' ./src/blog/ -R > posts.txt && cat posts.txt"
    - uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require("fs")
          const { owner, repo } = context.repo
          const result = await github.issues.listForRepo({ owner, repo })
          const issues = Object.fromEntries(result.data.map(x => [x.title, x]))
          let lines = fs.readFileSync('posts.txt').toString().split('\n')
          lines.forEach(l => {
          	l = l.trim()
          	if (!l) return
            let [f, nameLine] = l.split(':')
            let labels = ["blog-post"]
            const body = fs.readFileSync(f).toString().split('\n').map(x => {
              if (x.match(/^\s*@labels/)) {
                labels = labels.concat(x.trim().slice(x.indexOf('=')+1).split(",").map(l => l.trim()))
              }
              return x
            }).filter(x => !x.match(/^@/))
              .join('\n')
              .replace(/(!\[[^\]]*\]\()(\/[^\)]+\))/g, `$1https://github.com/${owner}/${repo}/raw/master$2`) // MD image
              .replace(/(\[[^\]]*\]\()(\/[^\)]+\))/g, `$1https://github.com/${owner}/${repo}/blob/master$2`) // MD link
              .replace(/(src=")(\/[^"]+")/g, `$1https://github.com/${owner}/${repo}/raw/master$2`) // <img> tag
            const title = nameLine.slice(nameLine.indexOf('=')+1).trim()
            if (title in issues) {
              const found = issues[title]
              github.issues.update({
                owner, repo,
                issue_number: found.number,
                labels: found.labels.concat(labels),
                title, body,
              })
              return
            }
            github.issues.create({ owner, repo, title, body, labels })
          })
